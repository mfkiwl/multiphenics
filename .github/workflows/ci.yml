name: multiphenics CI

on:
  push:
    branches:
      - "**"
  pull_request:
    branches:
      - master
  workflow_dispatch:

jobs:
  test:
    runs-on: ubuntu-latest
    container: numericalpdes/base_images:fenics
    steps:
      - uses: actions/checkout@v4
      - name: Install multiphenics
        run: |
          python3 -m pip install .
      - name: Run unit tests (serial)
        run: |
          pytest -svv tests/unit
      - name: Run unit tests (parallel)
        run: |
          mpirun -n 2 --allow-run-as-root pytest -svv tests/unit
      - name: Run tutorials (serial)
        run: |
          pytest -svv tutorials
      - name: Run tutorials (parallel)
        run: |
          mpirun -n 2 --allow-run-as-root pytest -svv tutorials

  docker:
    if: github.repository == 'multiphenics/multiphenics' && github.ref == 'refs/heads/master'
    runs-on: ubuntu-latest
    needs: [test]
    env:
      RELEASE_IMAGE: multiphenics/multiphenics:latest
    steps:
      - uses: actions/checkout@v4
      - name: Build the docker release image
        run: docker build --pull -t ${RELEASE_IMAGE} -f docker/Dockerfile .
      - name: Try importing the library inside the docker image
        run: docker run -i --rm ${RELEASE_IMAGE} python3 -c 'import multiphenics'
      - name: Run tutorials (serial) to verify that the docker image is working
        run: docker run -i --rm ${RELEASE_IMAGE} bash -c "python3 -c 'import multiphenics' && cd multiphenics && pytest tutorials"
      - name: Log into the docker registry
        run: docker login -u ${{ secrets.CI_REGISTRY_USER }} -p ${{ secrets.CI_REGISTRY_PASSWORD }}
      - name: Push to the docker registry
        run: docker push ${RELEASE_IMAGE}
